100XP
실습 설명
메뉴 추가와 삭제 기능까지 개발한 영준이는 다시금 코드를 확인하는 중입니다.
각 파일에서 사용한 코드들을 보니 DOM 노드를 활용해야 할 때마다 document.querySelect 메소드를 매번 사용하고 있었는데요. 매번 메소드를 호출하는 것보다 미리 태그를 선택해 두고 선택한 요소 노드를 모듈화하면 어떨까 싶어서 tags.js라는 파일을 만들었습니다.
tags.js 파일에는 기능 개발에 필요한 요소 노드들이 각 변수에 할당되어 있는데요. 하루빨리 메뉴 정하기 프로그램을 만들고 싶은 영준이를 위해 이 변수들을 한꺼번에 export한 다음, 필요한 곳에 필요한 만큼만 import해 주세요.

파일별로 필요한 변수들은 아래와 같습니다.

index.js: addBtn, addInput, list
add.js: addInput, list
delete.js: list



----------------
해설
변수나 함수 앞에 매번 export 키워드를 붙일 수도 있지만, 선언된 변수나 함수를 하나의 객체로 모아 한꺼번에 내보낼 수도 있습니다. tags.js에서 모든 변수를 한 번에 모아서 export한다면 다음과 같이 코드를 작성할 수 있는데요.

tag.js

const addBtn = document.querySelector('.add-btn');
const addInput = document.querySelector('.add-input');
const list = document.querySelector('.list');

// 여기에 코드를 작성하세요
export { addBtn, addInput, list };
이때 as 키워드를 활용하면 이름을 변경해서 export할 수도 있다는 점도 꼭 기억해 주세요!
그리고 이렇게 export된 값들을 각 파일에서 import해주어야 프로그램이 잘 동작하겠죠?

index.js

import { addMenu } from './add.js';
import { deleteMenu } from './delete.js';
// addBtn, addInput, list 를 import해 주세요
import { addBtn, addInput, list } from './tags.js';

const data = [];

addBtn.addEventListener('click', () => addMenu(data));
addInput.addEventListener('keypress', (e) => e.code === 'Enter' && addMenu(data));
list.addEventListener('click', ({ target }) => target.tagName === 'BUTTON' && deleteMenu(data, target.dataset.index));
add.js

// addInput, list를 import해 주세요
import { addInput, list } from './tags.js';

function add(data) {
  const inputValue = addInput.value;
  const index = data.length;

  const li = document.createElement('li');
  li.classList.add('item');
  li.innerHTML = `<b>${index + 1}</b>${inputValue}<button class="del-btn" data-index="${index}">x</div>`;
  list.append(li);

  data.push(inputValue);

  addInput.value = '';
  addInput.focus();
}

function emptyAlert() {
  alert('고민되는 메뉴를 입력해 주세요.');
  addInput.focus();
}

function maxAlert() {
  alert('메뉴는 최대 5개까지만 고민할 수 있습니다.');
  addInput.value = '';
}

export function addMenu(data) {
  const inputValue = addInput.value;

  if (inputValue === '') {
    emptyAlert();
  } else if (data.length > 4) {
    maxAlert();
  } else {
    add(data);
  }
};
delete.js

// list를 import해 주세요
import { list } from './tags.js';

function reloadMenu(data) {
  list.innerHTML = '';

  data.forEach((title, index) => {
    const li = document.createElement('li');
    li.classList.add('item');
    li.innerHTML = `<b>${index + 1}</b>${title}<button class="del-btn" data-index="${index}">x</div>`;
    list.append(li);
  });
}
